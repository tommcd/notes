[project]
name = "notes"
version = "0.1.0"
description = "A simple note-taking application"
readme = "README.md"
requires-python = ">=3.12"
dependencies = []

# Note: This project uses [dependency-groups] (PEP 735) for all development
# dependencies instead of [project.optional-dependencies]. This ensures that
# development tools are local-only and never published to PyPI.
# See [dependency-groups] section below.

[project.scripts]
notes = "notes.cli:main"

[build-system]
requires = ["uv_build>=0.9.0,<0.10.0"]
build-backend = "uv_build"

[tool.ruff]
line-length = 88         # Black's default
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "B", "C4", "S"]
ignore = [
  "B008", # Allow function calls in argument defaults (required for typer)
  "B007", # Allow unused loop variables (sometimes used for dict iteration)
  "S101", # Allow assert statements (used in tests)
  "S603", # Allow subprocess calls (test suite runs trusted scripts)
  "S607", # Allow partial executable paths (test suite uses standard tools)
]

# ---- unified pytest config (moved from pytest.ini) ----
[tool.pytest.ini_options]
testpaths = ["tests/unit", "tests/e2e", "tests/quality", "tests/docs"]
python_files = "test_*.py"
markers = [
  "slow: marks tests as slow (deselected by default, run with -m slow or --run-slow)",
  "e2e: marks end-to-end tests (CLI integration tests)",
  "unit: marks unit tests (fast, isolated)",
  "quality: marks quality/meta tests (config consistency, shell linting)",
  "docs: marks documentation tests (link checking, markdown style)",
]
addopts = """
  -v
  --tb=short
  --strict-markers
  -m 'not slow'
  --cov=notes
  --cov-branch
  --cov-report=term-missing:skip-covered
  --cov-report=xml:reports/coverage/coverage.xml
  --cov-report=html:reports/coverage/html
  --cov-report=json:reports/coverage/coverage.json
"""

[tool.external-tools]
# External (non-Python) tool versions for reproducible builds
# These tools are used across the project for linting, formatting, and testing
# Version format: "X.Y.Z" (without 'v' prefix)
#
# This is a generic convention that can be used in any Python project.
# Scripts in scripts/ directory read from this section.
shellcheck = "0.11.0"
shfmt = "3.10.0"
lychee = "0.20.1"
markdownlint-cli2 = "0.18.1"
taplo = "0.9.3"
hadolint = "2.14.0"

[dependency-groups]
# PEP 735: Development dependencies that are local-only and never published to PyPI
# Install with: uv sync --group dev --group docs
dev = [
  # Testing
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "pytest-mock>=3.15.1",
  "coverage[toml]>=7.10.7",
  "genbadge[coverage]>=1.1.2",
  # Code quality
  "ruff>=0.14.0",
  "vulture>=2.14",
  "pre-commit>=4.3.0",
  # Build and test orchestration
  "tox>=4.31.0",
  "tox-uv>=1.29.0",
  # Documentation formatting
  "mdformat>=0.7.22",
  # SSTDF tool management
  # NOTE: This assumes SSTDF monorepo structure (../sstdf-python-standards exists)
  # When moving project to standalone repo, change to:
  #   "sstdf-python-standards @ git+ssh://gerrit.internal.ericsson.com/nm2dev1-utils.git@master#subdirectory=SSTDF/sstdf-python-standards"
  # Or if published to PyPI:
  #   "sstdf-python-standards>=1.0.0"
  "sstdf-python-standards @ file:///${PROJECT_ROOT}/../sstdf-python-standards",
]
docs = [
  # Documentation site generation
  "mkdocs>=1.6.1",
  "mkdocs-material>=9.6.21",
  "mkdocs-material-extensions>=1.3.1",
]

# ---- coverage: module-targeted so it works for editable or wheel installs ----
[tool.coverage.run]
source = ["notes"]
branch = true
relative_files = true
omit = ["*/tests/*"]

[tool.coverage.report]
show_missing = true
precision = 2
skip_covered = false
fail_under = 0
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "@abstractmethod",
]

[tool.coverage.html]
directory = "reports/coverage/html"

[tool.coverage.xml]
output = "reports/coverage/coverage.xml"

[tool.coverage.json]
output = "reports/coverage/coverage.json"
